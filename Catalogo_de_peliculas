import os

class Pelicula:
    def __init__(self, titulo, director, genero, duracion, actores=None):
        self._titulo = titulo
        self.director = director
        self.genero = genero
        self.duracion = duracion
        self.actores = actores if actores else []

    def __str__(self):
        actores_str = ", ".join(self.actores) if self.actores else "Desconocido"
        return f"Título: {self._titulo}, Director: {self.director}, Género: {self.genero}, Duración: {self.duracion} minutos, Actores: {actores_str}"

class CatalogoPeliculas:
    def __init__(self, nombre):
        self.nombre = nombre
        self.ruta_archivo = f"{nombre}.txt"
        self.peliculas = []

        if os.path.exists(self.ruta_archivo):
            with open(self.ruta_archivo, 'r') as archivo:
                for linea in archivo:
                    datos = linea.strip().split(',')
                    if len(datos) >= 4:
                        actores = datos[4:]
                        pelicula = Pelicula(datos[0], datos[1], datos[2], datos[3], actores)
                        self.peliculas.append(pelicula)
                    else:
                        print("Error: La línea del archivo no contiene la cantidad correcta de elementos.")

    def agregar_pelicula(self, pelicula):
        self.peliculas.append(pelicula)
        with open(self.ruta_archivo, 'a') as archivo:
            actores_str = ", ".join(pelicula.actores) if pelicula.actores else "Desconocido"
            archivo.write(f"{pelicula._titulo},{pelicula.director},{pelicula.genero},{pelicula.duracion},{actores_str}\n")

    def listar_peliculas(self):
        print(f"Catálogo de películas '{self.nombre}':")
        for i, pelicula in enumerate(self.peliculas, 1):
            print(f"{i}. {pelicula}")

        print("\nSeleccione el número de la película que desea editar o borrar.")
        print("Escriba 'e' para editar, 'b' para borrar o '0' para volver al menú principal.")
        num_pelicula = input("Número de película: ")
        if num_pelicula.isdigit():
            num_pelicula = int(num_pelicula)
            if 0 < num_pelicula <= len(self.peliculas):
                accion = input("¿Desea editar (e) o borrar (b) la película seleccionada?: ").lower()
                if accion == "e":
                    self.editar_pelicula(num_pelicula)
                elif accion == "b":
                    self.eliminar_pelicula(num_pelicula)
                else:
                    print("Acción no válida.")
            elif num_pelicula == 0:
                return
            else:
                print("Número de película no válido.")
        else:
            print("Por favor, ingrese un número válido.")

    def editar_pelicula(self, num_pelicula):
        pelicula = self.peliculas[num_pelicula - 1]
        print(f"\nEditando la película {pelicula._titulo}:")
        nuevo_titulo = input(f"Nuevo título ({pelicula._titulo}): ")
        pelicula._titulo = nuevo_titulo if nuevo_titulo else pelicula._titulo
        nuevo_director = input(f"Nuevo director ({pelicula.director}): ")
        pelicula.director = nuevo_director if nuevo_director else pelicula.director
        nuevo_genero = input(f"Nuevo género ({pelicula.genero}): ")
        pelicula.genero = nuevo_genero if nuevo_genero else pelicula.genero
        nueva_duracion = input(f"Nueva duración ({pelicula.duracion} minutos): ")
        pelicula.duracion = nueva_duracion if nueva_duracion else pelicula.duracion
        nueva_lista_actores = input(f"Nueva lista de actores ({', '.join(pelicula.actores)}): ")
        actores = nueva_lista_actores.split(",")[:2]  # Seleccionamos hasta 2 actores
        pelicula.actores = [actor.strip() for actor in actores]
        print("Película editada correctamente.")

    def eliminar_pelicula(self, num_pelicula):
        pelicula = self.peliculas.pop(num_pelicula - 1)
        print(f"Se ha borrado la película '{pelicula._titulo}'.")

    def eliminar_catalogo(self):
        os.remove(self.ruta_archivo)
        self.peliculas = []
        print(f"El catálogo de películas '{self.nombre}' ha sido eliminado.")

    # Método para obtener la lista de actores
    def obtener_actores(self):
        agregar_actores = input("¿Desea agregar actores a la película? (s/n): ")
        if agregar_actores.lower() == "s":
            actores = []
            for i in range(2):
                actor = input(f"Ingrese nombre del actor {i+1} (o presione Enter para omitir): ")
                if actor:
                    actores.append(actor)
            return actores
        else:
            return []

def mostrar_menu():
    print("\nMenú:")
    print("1. Agregar Película")
    print("2. Listar Películas")
    print("3. Eliminar catálogo películas")
    print("4. Salir")

# Función para obtener el género favorito del usuario y mostrar la frase correspondiente
def obtener_frase_genero(genero_favorito):
    frases = {
        "accion": "¡Prepárate para el mundo de la adrenalina!",
        "aventura": "¡Prepárate para una gran aventura!",
        "animacion": "¡Prepárate para un mundo animado!",
        "comedia": "¡Prepárate para reír a carcajadas!",
        "documental": "¡Prepárate para explorar la realidad!",
        "drama": "¡Prepárate para las emociones!",
        "fantasia": "¡Prepárate para un viaje a mundos mágicos!",
        "terror": "¡Prepárate para el escalofrío!",
        "ciencia ficcion": "¡Prepárate para explorar lo desconocido!",
        "misterio": "¡Prepárate para resolver el enigma!",
        "suspense": "¡Prepárate para mantener tus nervios en tensión!",
        "romance": "¡Prepárate para enamorarte!",
        "crimen": "¡Prepárate para adentrarte en la oscuridad!",
        "guerra": "¡Prepárate para la batalla!",
        "western": "¡Prepárate para cabalgar hacia el atardecer!",
        "musical": "¡Prepárate para bailar al ritmo de la vida!",
        "biografico": "¡Prepárate para conocer la historia de un héroe!",
        "historico": "¡Prepárate para viajar al pasado!",
        "deportivo": "¡Prepárate para la emoción del juego!",
        "familiar": "¡Prepárate para divertirte en familia!",
        "animacion para adultos": "¡Prepárate para una experiencia animada única!",
        "superheroes": "¡Prepárate para salvar el mundo!",
        "viajes en el tiempo": "¡Prepárate para cambiar el curso de la historia!"
    }
    return frases.get(genero_favorito, "¡Prepárate para disfrutar de una película!")

# Función principal
def main():
    nombre_usuario = input("Hola, ¿cuál es tu nombre? ")
    print(f"Bienvenido, {nombre_usuario}.")

    nombre_catalogo = input("Ingrese el nombre del catálogo de películas: ")
    genero_favorito = input("¿Cuál es tu género favorito de película? ").lower()

    print(obtener_frase_genero(genero_favorito))

    catalogo = CatalogoPeliculas(nombre_catalogo)

    while True:
        mostrar_menu()
        opcion = input("Seleccione una opción: ")

        if opcion == "1":
            print("Ingrese los datos de la película:")
            titulo = input("Título: ")
            print("Si no conoce la siguiente información, presione Enter ya que no es obligatoria")
            director = input("Director: ")
            genero = input("Género: ")
            duracion = input("Duración (minutos): ")
            actores = catalogo.obtener_actores()
            pelicula = Pelicula(titulo, director, genero, duracion, actores)
            catalogo.agregar_pelicula(pelicula)
        elif opcion == "2":
            catalogo.listar_peliculas()
        elif opcion == "3":
            confirmacion = input("¿Está seguro que desea eliminar el catálogo de películas? (s/n): ")
            if confirmacion.lower() == "s":
                catalogo.eliminar_catalogo()
                break
        elif opcion == "4":
            print("Gracias por visitar tu catálogo de películas. ¡Nos vemos!")
            break
        else:
            print("Opción no válida. Por favor, seleccione una opción válida.")

if __name__ == "__main__":
    main()
